{"ast":null,"code":"var _jsxFileName = \"/Users/cruz/Desktop/chatbot/src/components/Chats/Chats.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Chats.css';\nimport sendBtn3 from '../../assets/sendBtn3.svg';\nimport attachmentBtn from '../../assets/attachmentBtn.svg';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chats = ({\n  value,\n  setValue,\n  message,\n  setMessage,\n  currentTitle,\n  setCurrentTitle,\n  setUniqueTitles\n}) => {\n  _s();\n  const [previousChats, setPreviousChats] = useState([]);\n  const getMessages = async () => {\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify({\n        message: value\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    try {\n      const response = await fetch('http://localhost:8000/completions', options);\n      const data = await response.json();\n      setMessage(data.choices[0].message);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    if (value && message) {\n      if (!currentTitle) {\n        setCurrentTitle(value);\n      }\n      setPreviousChats(prevChats => [...prevChats, {\n        title: currentTitle || value,\n        role: \"user\",\n        content: value\n      }, {\n        title: currentTitle || value,\n        role: message.role,\n        content: message.content\n      }]);\n    }\n  }, [message]);\n  const currentChat = previousChats.filter(chat => chat.title === currentTitle);\n  const uniqueTitles = Array.from(new Set(previousChats.map(previousChat => previousChat.title)));\n  console.log(uniqueTitles);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"feed\",\n      children: currentChat.map((chatMessage, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"role\",\n          children: chatMessage.role\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: chatMessage.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatFooter\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inp\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: value,\n            onChange: e => setValue(e.target.value),\n            type: \"text\",\n            placeholder: \"Message Chatbot...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"send\",\n            onClick: getMessages,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: sendBtn3,\n              alt: \"send\",\n              className: \"sendBtn\",\n              id: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"attachment\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: attachmentBtn,\n              alt: \"attachment\",\n              className: \"attachmentBtn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"info\",\n          children: \"ChatBot Mar 14 Version. Free Research Preview. Our Goal is to make AI systems more natural and safe to interact with. Your feedback will help us improve.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Chats, \"9vi1IwXFQWftzDo5tc5h0zTw/nY=\");\n_c = Chats;\nexport default Chats;\nvar _c;\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"names":["React","useState","useEffect","sendBtn3","attachmentBtn","jsxDEV","_jsxDEV","Fragment","_Fragment","Chats","value","setValue","message","setMessage","currentTitle","setCurrentTitle","setUniqueTitles","_s","previousChats","setPreviousChats","getMessages","options","method","body","JSON","stringify","headers","response","fetch","data","json","choices","error","console","prevChats","title","role","content","currentChat","filter","chat","uniqueTitles","Array","from","Set","map","previousChat","log","children","className","chatMessage","index","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","type","placeholder","onClick","src","alt","id","_c","$RefreshReg$"],"sources":["/Users/cruz/Desktop/chatbot/src/components/Chats/Chats.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Chats.css';\nimport sendBtn3 from '../../assets/sendBtn3.svg';\nimport attachmentBtn from '../../assets/attachmentBtn.svg';\n\nconst Chats = ({ value, setValue, message, setMessage, currentTitle, setCurrentTitle, setUniqueTitles}) => {\n  const [previousChats, setPreviousChats] = useState([]);\n\n  const getMessages = async () => {\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify({ message: value }),\n      headers: { \"Content-Type\": \"application/json\" }\n    };\n    try {\n      const response = await fetch('http://localhost:8000/completions', options);\n      const data = await response.json();\n      setMessage(data.choices[0].message);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    if (value && message) {\n      if (!currentTitle) {\n        setCurrentTitle(value);\n      }\n      setPreviousChats(prevChats => [\n        ...prevChats,\n        { title: currentTitle || value, role: \"user\", content: value },\n        { title: currentTitle || value, role: message.role, content: message.content }\n      ]);\n    }\n  }, [message]);\n\n  const currentChat = previousChats.filter(chat => chat.title === currentTitle);\n\n  const uniqueTitles = Array.from(new Set(previousChats.map(previousChat => previousChat.title)))\n  console.log(uniqueTitles)\n\n  return (\n    <>\n      <ul className='feed'>\n        {currentChat.map((chatMessage, index) => (\n          <li key={index}>\n            <p className='role'>{chatMessage.role}</p>\n            <p>{chatMessage.content}</p>\n          </li>\n        ))}\n      </ul>\n      <div className='chatFooter'>\n        <div className=\"input-container\">\n          <div className='inp'>\n            <input \n              value={value}\n              onChange={(e) => setValue(e.target.value)}\n              type='text' \n              placeholder='Message Chatbot...' \n            />\n            <button className='send' onClick={getMessages}>\n              <img src={sendBtn3} alt='send' className='sendBtn' id='submit' />\n            </button>\n            <button className='attachment'>\n              <img src={attachmentBtn} alt='attachment' className='attachmentBtn' />\n            </button>\n          </div>\n          <p className='info'>\n            ChatBot Mar 14 Version. Free Research Preview. Our Goal is to make AI systems more natural and safe to interact with. Your feedback will help us improve. \n          </p>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Chats;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}