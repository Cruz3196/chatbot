{"ast":null,"code":"var _jsxFileName = \"/Users/cruz/Desktop/chatbot/client/src/components/Chats/Chats.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaperclip, faCircleUp } from '@fortawesome/free-solid-svg-icons';\nimport './Chats.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chats = ({\n  value,\n  setValue,\n  message,\n  setMessage,\n  currentTitle,\n  setCurrentTitle,\n  setUniqueTitles,\n  isTyping,\n  setIsTyping\n}) => {\n  _s();\n  const [previousChats, setPreviousChats] = useState([]);\n  const getMessages = async () => {\n    if (!currentTitle) {\n      setCurrentTitle(value);\n    }\n    setPreviousChats(prevChats => {\n      const newChats = [...prevChats, {\n        title: currentTitle || value,\n        role: \"user\",\n        content: value\n      }];\n      const uniqueTitles = Array.from(new Set(newChats.map(chat => chat.title)));\n      setUniqueTitles(uniqueTitles);\n      return newChats;\n    });\n    setValue(''); // clear the input field after adding the user's message\n\n    // simulating typing indicator for the assistant\n    setIsTyping(true); // set typing indicator to true\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify({\n        message: value\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    try {\n      const response = await fetch('http://localhost:8000/completions', options);\n      const data = await response.json();\n      setMessage(data.choices[0].message);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setIsTyping(false); // set typing indicator to false\n    }\n  };\n  useEffect(() => {\n    if (message) {\n      setPreviousChats(prevChats => {\n        const newChats = [...prevChats, {\n          title: currentTitle,\n          role: message.role,\n          content: message.content\n        }];\n        const uniqueTitles = Array.from(new Set(newChats.map(chat => chat.title)));\n        setUniqueTitles(uniqueTitles);\n        return newChats;\n      });\n    }\n  }, [message]);\n  const currentChat = previousChats.filter(chat => chat.title === currentTitle);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"feed\",\n      children: [currentChat.map((chatMessage, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `chat-bubble ${chatMessage.role === 'user' ? 'user' : 'assistant'}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: chatMessage.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"chat-bubble assistant\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Assistant is typing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatFooter\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inp\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: value,\n            onChange: e => setValue(e.target.value),\n            type: \"text\",\n            placeholder: \"Message Chatbot...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"send\",\n            onClick: getMessages,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCircleUp,\n              alt: \"send\",\n              className: \"sendBtn\",\n              id: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"attachment\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPaperclip,\n              alt: \"attachment\",\n              className: \"attachmentBtn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"info\",\n          children: \"ChatBot. Free Research Preview. Our Goal is to make AI systems more natural and safe to interact with. Your feedback will help us improve.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Chats, \"9vi1IwXFQWftzDo5tc5h0zTw/nY=\");\n_c = Chats;\nexport default Chats;\nvar _c;\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","faPaperclip","faCircleUp","jsxDEV","_jsxDEV","Fragment","_Fragment","Chats","value","setValue","message","setMessage","currentTitle","setCurrentTitle","setUniqueTitles","isTyping","setIsTyping","_s","previousChats","setPreviousChats","getMessages","prevChats","newChats","title","role","content","uniqueTitles","Array","from","Set","map","chat","options","method","body","JSON","stringify","headers","response","fetch","data","json","choices","error","console","currentChat","filter","children","className","chatMessage","index","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","type","placeholder","onClick","icon","alt","id","_c","$RefreshReg$"],"sources":["/Users/cruz/Desktop/chatbot/client/src/components/Chats/Chats.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaperclip, faCircleUp } from '@fortawesome/free-solid-svg-icons';\nimport './Chats.css';\n\nconst Chats = ({ value, setValue, message, setMessage, currentTitle, setCurrentTitle, setUniqueTitles, isTyping, setIsTyping }) => {\n  const [previousChats, setPreviousChats] = useState([]);\n\n  const getMessages = async () => {\n    if (!currentTitle) {\n      setCurrentTitle(value);\n    }\n    \n    setPreviousChats(prevChats => {\n      const newChats = [\n        ...prevChats,\n        { title: currentTitle || value, role: \"user\", content: value }\n      ];\n      const uniqueTitles = Array.from(new Set(newChats.map(chat => chat.title)));\n      setUniqueTitles(uniqueTitles);\n      return newChats;\n    });\n\n    setValue(''); // clear the input field after adding the user's message\n    \n    // simulating typing indicator for the assistant\n    setIsTyping(true); // set typing indicator to true\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify({ message: value }),\n      headers: { \"Content-Type\": \"application/json\" }\n    };\n    try {\n      const response = await fetch('http://localhost:8000/completions', options);\n      const data = await response.json();\n      setMessage(data.choices[0].message);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setIsTyping(false); // set typing indicator to false\n    }\n  };\n\n  useEffect(() => {\n    if (message) {\n      setPreviousChats(prevChats => {\n        const newChats = [\n          ...prevChats,\n          { title: currentTitle, role: message.role, content: message.content }\n        ];\n        const uniqueTitles = Array.from(new Set(newChats.map(chat => chat.title)));\n        setUniqueTitles(uniqueTitles);\n        return newChats;\n      });\n    }\n  }, [message]);\n\n  const currentChat = previousChats.filter(chat => chat.title === currentTitle);\n\n  return (\n    <>\n      <section className='feed'>\n        {currentChat.map((chatMessage, index) => (\n          <li key={index} className={`chat-bubble ${chatMessage.role === 'user' ? 'user' : 'assistant'}`}>\n            <p>{chatMessage.content}</p>\n          </li>\n        ))}\n        {isTyping && (\n          <li className='chat-bubble assistant'>\n            <p className='role'></p>\n            <p>Assistant is typing...</p>\n          </li>\n        )}\n      </section>\n\n      <div className='chatFooter'>\n        <div className=\"input-container\">\n          <div className='inp'>\n            <input\n              value={value}\n              onChange={(e) => setValue(e.target.value)}\n              type='text'\n              placeholder='Message Chatbot...'\n            />\n            <button className='send' onClick={getMessages}>\n              <FontAwesomeIcon icon={faCircleUp} alt='send' className='sendBtn' id='submit' />\n            </button>\n            <button className='attachment'>\n              <FontAwesomeIcon icon={faPaperclip} alt='attachment' className='attachmentBtn' />\n            </button>\n          </div>\n          <p className='info'>\n            ChatBot. Free Research Preview. Our Goal is to make AI systems more natural and safe to interact with. Your feedback will help us improve.\n          </p>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Chats;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}