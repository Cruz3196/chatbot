{"ast":null,"code":"var _jsxFileName = \"/Users/cruz/Desktop/chatbot/client/src/components/Chats/Chats.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaperclip, faCircleUp } from '@fortawesome/free-solid-svg-icons';\nimport './Chats.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chats = ({\n  value,\n  setValue,\n  currentTitle,\n  setCurrentTitle,\n  setUniqueTitles,\n  isTyping,\n  setIsTyping\n}) => {\n  _s();\n  const [previousChats, setPreviousChats] = useState([]);\n  const [message, setMessage] = useState(null);\n  const getMessages = async () => {\n    setPreviousChats(prevChats => [...prevChats, {\n      title: currentTitle || value,\n      role: \"user\",\n      content: value\n    }]);\n    setIsTyping(true);\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify({\n        message: value\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    try {\n      const response = await fetch('http://localhost:8000/completions', options);\n      const data = await response.json();\n      if (data.choices && data.choices.length > 0) {\n        const assistantMessage = data.choices[0].message;\n        setMessage(assistantMessage);\n      } else {\n        console.error('Invalid response structure:', data);\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setIsTyping(false);\n    }\n    setValue(''); // Clear the input field\n  };\n  const updateCurrentTitle = useCallback(() => {\n    if (!currentTitle && value) {\n      setCurrentTitle(value);\n    }\n  }, [value, currentTitle, setCurrentTitle]);\n  useEffect(() => {\n    updateCurrentTitle();\n  }, [value, updateCurrentTitle]);\n  useEffect(() => {\n    if (message) {\n      setPreviousChats(prevChats => [...prevChats, {\n        title: currentTitle,\n        role: message.role,\n        content: message.content\n      }]);\n    }\n  }, [message, currentTitle]);\n  useEffect(() => {\n    const uniqueTitles = Array.from(new Set(previousChats.map(chat => chat.title)));\n    setUniqueTitles(uniqueTitles);\n  }, [previousChats, setUniqueTitles]);\n  const currentChat = previousChats.filter(chat => chat.title === currentTitle);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"feed\",\n      children: [currentChat.map((chatMessage, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `chat-bubble ${chatMessage.role === 'user' ? 'user' : 'assistant'}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: chatMessage.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"chat-bubble assistant\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Assistant is typing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatFooter\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inp\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: value,\n            onChange: e => setValue(e.target.value),\n            type: \"text\",\n            placeholder: \"Message Chatbot...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"send\",\n            onClick: getMessages,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCircleUp,\n              alt: \"send\",\n              className: \"sendBtn\",\n              id: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"attachment\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPaperclip,\n              alt: \"attachment\",\n              className: \"attachmentBtn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"info\",\n          children: \"ChatBot. Free Research Preview. Our Goal is to make AI systems more natural and safe to interact with. Your feedback will help us improve.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Chats, \"czrJ2wC0Dli8Lf0T0dMxAVAzvck=\");\n_c = Chats;\nexport default Chats;\nvar _c;\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","FontAwesomeIcon","faPaperclip","faCircleUp","jsxDEV","_jsxDEV","Fragment","_Fragment","Chats","value","setValue","currentTitle","setCurrentTitle","setUniqueTitles","isTyping","setIsTyping","_s","previousChats","setPreviousChats","message","setMessage","getMessages","prevChats","title","role","content","options","method","body","JSON","stringify","headers","response","fetch","data","json","choices","length","assistantMessage","console","error","updateCurrentTitle","uniqueTitles","Array","from","Set","map","chat","currentChat","filter","children","className","chatMessage","index","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","type","placeholder","onClick","icon","alt","id","_c","$RefreshReg$"],"sources":["/Users/cruz/Desktop/chatbot/client/src/components/Chats/Chats.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaperclip, faCircleUp } from '@fortawesome/free-solid-svg-icons';\nimport './Chats.css';\n\nconst Chats = ({ value, setValue, currentTitle, setCurrentTitle, setUniqueTitles, isTyping, setIsTyping }) => {\n  const [previousChats, setPreviousChats] = useState([]);\n  const [message, setMessage] = useState(null);\n\n  const getMessages = async () => {\n    setPreviousChats(prevChats => [\n      ...prevChats,\n      { title: currentTitle || value, role: \"user\", content: value }\n    ]);\n\n    setIsTyping(true);\n\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify({ message: value }),\n      headers: { \"Content-Type\": \"application/json\" }\n    };\n\n    try {\n      const response = await fetch('http://localhost:8000/completions', options);\n      const data = await response.json();\n      if (data.choices && data.choices.length > 0) {\n        const assistantMessage = data.choices[0].message;\n        setMessage(assistantMessage);\n      } else {\n        console.error('Invalid response structure:', data);\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setIsTyping(false);\n    }\n\n    setValue(''); // Clear the input field\n  };\n\n  const updateCurrentTitle = useCallback(() => {\n    if (!currentTitle && value) {\n      setCurrentTitle(value);\n    }\n  }, [value, currentTitle, setCurrentTitle]);\n\n  useEffect(() => {\n    updateCurrentTitle();\n  }, [value, updateCurrentTitle]);\n\n  useEffect(() => {\n    if (message) {\n      setPreviousChats(prevChats => [\n        ...prevChats,\n        { title: currentTitle, role: message.role, content: message.content }\n      ]);\n    }\n  }, [message, currentTitle]);\n\n  useEffect(() => {\n    const uniqueTitles = Array.from(new Set(previousChats.map(chat => chat.title)));\n    setUniqueTitles(uniqueTitles);\n  }, [previousChats, setUniqueTitles]);\n\n  const currentChat = previousChats.filter(chat => chat.title === currentTitle);\n\n  return (\n    <>\n      <section className='feed'>\n        {currentChat.map((chatMessage, index) => (\n          <li key={index} className={`chat-bubble ${chatMessage.role === 'user' ? 'user' : 'assistant'}`}>\n            <p>{chatMessage.content}</p>\n          </li>\n        ))}\n        {isTyping && (\n          <li className='chat-bubble assistant'>\n            <p className='role'></p>\n            <p>Assistant is typing...</p>\n          </li>\n        )}\n      </section>\n\n      <div className='chatFooter'>\n        <div className=\"input-container\">\n          <div className='inp'>\n            <input \n              value={value}\n              onChange={(e) => setValue(e.target.value)}\n              type='text' \n              placeholder='Message Chatbot...' \n            />\n            <button className='send' onClick={getMessages}>\n              <FontAwesomeIcon icon={faCircleUp} alt='send' className='sendBtn' id='submit' />\n            </button>\n            <button className='attachment'>\n              <FontAwesomeIcon icon={faPaperclip} alt='attachment' className='attachmentBtn' />\n            </button>\n          </div>\n          <p className='info'>\n            ChatBot. Free Research Preview. Our Goal is to make AI systems more natural and safe to interact with. Your feedback will help us improve. \n          </p>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Chats;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}